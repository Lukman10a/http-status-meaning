{"version":3,"file":"http-status-meaning.js","sources":["../src/statusCodes.mjs","../src/i18n.mjs","../src/useCases.mjs","../src/index.mjs","../browser/index.js"],"sourcesContent":["const statusCodes = {\r\n  // 1xx Informational\r\n  100: \"Continue - The server has received the request headers and the client should proceed to send the request body.\",\r\n  101: \"Switching Protocols - The requester has asked the server to switch protocols and the server has agreed to do so.\",\r\n  102: \"Processing - The server has received and is processing the request, but no response is available yet.\",\r\n  103: \"Early Hints - Used to return some response headers before final HTTP message.\",\r\n\r\n  // 2xx Success\r\n  200: \"OK - The request was successful.\",\r\n  201: \"Created - A new resource was successfully created.\",\r\n  202: \"Accepted - The request has been accepted for processing, but the processing has not been completed.\",\r\n  203: \"Non-Authoritative Information - The returned information is from a cached copy instead of the origin server.\",\r\n  204: \"No Content - The request was successful, but there's no content to return.\",\r\n  205: \"Reset Content - The server has fulfilled the request and desires that the user agent reset the document view.\",\r\n  206: \"Partial Content - The server is delivering only part of the resource due to a range header sent by the client.\",\r\n  207: \"Multi-Status - The message body that follows is an XML message and can contain multiple separate response codes.\",\r\n  208: \"Already Reported - The members of a DAV binding have already been enumerated in a previous reply.\",\r\n  226: \"IM Used - The server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\",\r\n\r\n  // 3xx Redirection\r\n  300: \"Multiple Choices - The request has more than one possible response.\",\r\n  301: \"Moved Permanently - The URL of the requested resource has been changed permanently.\",\r\n  302: \"Found - The URI of requested resource has been changed temporarily.\",\r\n  303: \"See Other - The response to the request can be found under another URI using a GET method.\",\r\n  304: \"Not Modified - The resource has not been modified since the last request.\",\r\n  305: \"Use Proxy - The requested resource is available only through a proxy.\",\r\n  307: \"Temporary Redirect - The request should be repeated with another URI, but future requests should still use the original URI.\",\r\n  308: \"Permanent Redirect - The request and all future requests should be repeated using another URI.\",\r\n\r\n  // 4xx Client Errors\r\n  400: \"Bad Request - The request could not be understood.\",\r\n  401: \"Unauthorized - Authentication is required.\",\r\n  402: \"Payment Required - Payment is required for the requested resource.\",\r\n  403: \"Forbidden - The server understood the request but refuses to authorize it.\",\r\n  404: \"Not Found - The requested resource does not exist.\",\r\n  405: \"Method Not Allowed - The request method is not supported for the requested resource.\",\r\n  406: \"Not Acceptable - The requested resource cannot generate content according to the Accept headers sent.\",\r\n  407: \"Proxy Authentication Required - The client must first authenticate itself with the proxy.\",\r\n  408: \"Request Timeout - The server timed out waiting for the request.\",\r\n  409: \"Conflict - The request could not be completed due to a conflict with the current state of the resource.\",\r\n  410: \"Gone - The requested resource is no longer available and will not be available again.\",\r\n  411: \"Length Required - The request did not specify the length of its content.\",\r\n  412: \"Precondition Failed - The server does not meet one of the preconditions specified in the request.\",\r\n  413: \"Payload Too Large - The request entity is larger than limits defined by server.\",\r\n  414: \"URI Too Long - The URI provided was too long for the server to process.\",\r\n  415: \"Unsupported Media Type - The request entity has a media type which the server or resource does not support.\",\r\n  416: \"Range Not Satisfiable - The client has asked for a portion of the file, but the server cannot supply that portion.\",\r\n  417: \"Expectation Failed - The server cannot meet the requirements of the Expect request-header field.\",\r\n  418: \"I'm a teapot - The server refuses the attempt to brew coffee with a teapot.\",\r\n  421: \"Misdirected Request - The request was directed at a server that is not able to produce a response.\",\r\n  422: \"Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.\",\r\n  423: \"Locked - The resource that is being accessed is locked.\",\r\n  424: \"Failed Dependency - The request failed due to failure of a previous request.\",\r\n  425: \"Too Early - The server is unwilling to risk processing a request that might be replayed.\",\r\n  426: \"Upgrade Required - The client should switch to a different protocol.\",\r\n  428: \"Precondition Required - The origin server requires the request to be conditional.\",\r\n  429: \"Too Many Requests - The user has sent too many requests in a given amount of time.\",\r\n  431: \"Request Header Fields Too Large - The server is unwilling to process the request because its header fields are too large.\",\r\n  451: \"Unavailable For Legal Reasons - The resource is unavailable due to legal reasons.\",\r\n\r\n  // 5xx Server Errors\r\n  500: \"Internal Server Error - A generic error message for server issues.\",\r\n  501: \"Not Implemented - The server does not support the functionality required to fulfill the request.\",\r\n  502: \"Bad Gateway - The server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\r\n  503: \"Service Unavailable - The server is temporarily unavailable.\",\r\n  504: \"Gateway Timeout - The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\",\r\n  505: \"HTTP Version Not Supported - The server does not support the HTTP protocol version used in the request.\",\r\n  506: \"Variant Also Negotiates - The server has an internal configuration error.\",\r\n  507: \"Insufficient Storage - The server is unable to store the representation needed to complete the request.\",\r\n  508: \"Loop Detected - The server detected an infinite loop while processing the request.\",\r\n  510: \"Not Extended - Further extensions to the request are required for the server to fulfill it.\",\r\n  511: \"Network Authentication Required - The client needs to authenticate to gain network access.\",\r\n};\r\n\r\nexport default statusCodes;\r\n","// Available languages\r\nexport const availableLanguages = [\"en\", \"es\", \"fr\", \"de\", \"pt\", \"it\", \"ru\", \"zh\", \"ja\", \"ar\"];\r\n\r\n// Translations for status code categories\r\nexport const categoryTranslations = {\r\n  en: {\r\n    Informational: \"Informational\",\r\n    Success: \"Success\",\r\n    Redirection: \"Redirection\",\r\n    \"Client Error\": \"Client Error\",\r\n    \"Server Error\": \"Server Error\",\r\n    Unknown: \"Unknown\",\r\n  },\r\n  es: {\r\n    Informational: \"Informativo\",\r\n    Success: \"Éxito\",\r\n    Redirection: \"Redirección\",\r\n    \"Client Error\": \"Error del Cliente\",\r\n    \"Server Error\": \"Error del Servidor\",\r\n    Unknown: \"Desconocido\",\r\n  },\r\n  fr: {\r\n    Informational: \"Information\",\r\n    Success: \"Succès\",\r\n    Redirection: \"Redirection\",\r\n    \"Client Error\": \"Erreur Client\",\r\n    \"Server Error\": \"Erreur Serveur\",\r\n    Unknown: \"Inconnu\",\r\n  },\r\n  de: {\r\n    Informational: \"Information\",\r\n    Success: \"Erfolg\",\r\n    Redirection: \"Umleitung\",\r\n    \"Client Error\": \"Client-Fehler\",\r\n    \"Server Error\": \"Server-Fehler\",\r\n    Unknown: \"Unbekannt\",\r\n  },\r\n  pt: {\r\n    Informational: \"Informativo\",\r\n    Success: \"Sucesso\",\r\n    Redirection: \"Redirecionamento\",\r\n    \"Client Error\": \"Erro do Cliente\",\r\n    \"Server Error\": \"Erro do Servidor\",\r\n    Unknown: \"Desconhecido\",\r\n  },\r\n  it: {\r\n    Informational: \"Informativo\",\r\n    Success: \"Successo\",\r\n    Redirection: \"Reindirizzamento\",\r\n    \"Client Error\": \"Errore del Client\",\r\n    \"Server Error\": \"Errore del Server\",\r\n    Unknown: \"Sconosciuto\",\r\n  },\r\n  ru: {\r\n    Informational: \"Информационный\",\r\n    Success: \"Успех\",\r\n    Redirection: \"Перенаправление\",\r\n    \"Client Error\": \"Ошибка Клиента\",\r\n    \"Server Error\": \"Ошибка Сервера\",\r\n    Unknown: \"Неизвестно\",\r\n  },\r\n  zh: {\r\n    Informational: \"信息性\",\r\n    Success: \"成功\",\r\n    Redirection: \"重定向\",\r\n    \"Client Error\": \"客户端错误\",\r\n    \"Server Error\": \"服务器错误\",\r\n    Unknown: \"未知\",\r\n  },\r\n  ja: {\r\n    Informational: \"情報\",\r\n    Success: \"成功\",\r\n    Redirection: \"リダイレクション\",\r\n    \"Client Error\": \"クライアントエラー\",\r\n    \"Server Error\": \"サーバーエラー\",\r\n    Unknown: \"不明\",\r\n  },\r\n  ar: {\r\n    Informational: \"معلوماتي\",\r\n    Success: \"نجاح\",\r\n    Redirection: \"إعادة توجيه\",\r\n    \"Client Error\": \"خطأ العميل\",\r\n    \"Server Error\": \"خطأ الخادم\",\r\n    Unknown: \"غير معروف\",\r\n  },\r\n};\r\n\r\n// Translations for status codes\r\nexport const statusCodeTranslations = {\r\n  // English is the default in statusCodes.mjs\r\n  es: {\r\n    200: \"OK - La solicitud ha tenido éxito.\",\r\n    201: \"Creado - Se ha creado un nuevo recurso con éxito.\",\r\n    400: \"Solicitud incorrecta - El servidor no pudo entender la solicitud.\",\r\n    401: \"No autorizado - Se requiere autenticación.\",\r\n    403: \"Prohibido - El servidor entendió la solicitud, pero se niega a autorizarla.\",\r\n    404: \"No encontrado - El recurso solicitado no existe.\",\r\n    500: \"Error interno del servidor - Un mensaje de error genérico para problemas del servidor.\",\r\n    503: \"Servicio no disponible - El servidor no está disponible temporalmente.\",\r\n  },\r\n  fr: {\r\n    200: \"OK - La requête a réussi.\",\r\n    201: \"Créé - Une nouvelle ressource a été créée avec succès.\",\r\n    400: \"Mauvaise demande - Le serveur n'a pas pu comprendre la requête.\",\r\n    401: \"Non autorisé - Une authentification est nécessaire.\",\r\n    403: \"Interdit - Le serveur a compris la requête mais refuse de l'autoriser.\",\r\n    404: \"Non trouvé - La ressource demandée n'existe pas.\",\r\n    500: \"Erreur interne du serveur - Un message d'erreur générique pour les problèmes de serveur.\",\r\n    503: \"Service indisponible - Le serveur est temporairement indisponible.\",\r\n  },\r\n  de: {\r\n    200: \"OK - Die Anfrage war erfolgreich.\",\r\n    201: \"Erstellt - Eine neue Ressource wurde erfolgreich erstellt.\",\r\n    400: \"Fehlerhafte Anfrage - Die Anfrage konnte nicht verstanden werden.\",\r\n    401: \"Nicht autorisiert - Authentifizierung ist erforderlich.\",\r\n    403: \"Verboten - Der Server hat die Anfrage verstanden, weigert sich aber, sie zu autorisieren.\",\r\n    404: \"Nicht gefunden - Die angeforderte Ressource existiert nicht.\",\r\n    500: \"Interner Serverfehler - Eine generische Fehlermeldung für Serverprobleme.\",\r\n    503: \"Dienst nicht verfügbar - Der Server ist vorübergehend nicht verfügbar.\",\r\n  },\r\n  pt: {\r\n    200: \"OK - A requisição foi bem-sucedida.\",\r\n    201: \"Criado - Um novo recurso foi criado com sucesso.\",\r\n    400: \"Requisição inválida - O servidor não conseguiu entender a requisição.\",\r\n    401: \"Não autorizado - Autenticação é necessária.\",\r\n    403: \"Proibido - O servidor entendeu a requisição, mas recusa-se a autorizá-la.\",\r\n    404: \"Não encontrado - O recurso solicitado não existe.\",\r\n    500: \"Erro interno do servidor - Uma mensagem de erro genérica para problemas no servidor.\",\r\n    503: \"Serviço indisponível - O servidor está temporariamente indisponível.\",\r\n  },\r\n  it: {\r\n    200: \"OK - La richiesta è stata completata con successo.\",\r\n    201: \"Creato - Una nuova risorsa è stata creata con successo.\",\r\n    400: \"Richiesta errata - Il server non ha potuto comprendere la richiesta.\",\r\n    401: \"Non autorizzato - È richiesta l'autenticazione.\",\r\n    403: \"Vietato - Il server ha compreso la richiesta, ma si rifiuta di autorizzarla.\",\r\n    404: \"Non trovato - La risorsa richiesta non esiste.\",\r\n    500: \"Errore interno del server - Un messaggio di errore generico per problemi del server.\",\r\n    503: \"Servizio non disponibile - Il server è temporaneamente non disponibile.\",\r\n  },\r\n  ru: {\r\n    200: \"OK - Запрос успешно выполнен.\",\r\n    201: \"Создано - Новый ресурс был успешно создан.\",\r\n    400: \"Плохой запрос - Сервер не смог понять запрос.\",\r\n    401: \"Не авторизован - Требуется аутентификация.\",\r\n    403: \"Запрещено - Сервер понял запрос, но отказывается его авторизовать.\",\r\n    404: \"Не найдено - Запрашиваемый ресурс не существует.\",\r\n    500: \"Внутренняя ошибка сервера - Общее сообщение об ошибке для проблем сервера.\",\r\n    503: \"Сервис недоступен - Сервер временно недоступен.\",\r\n  },\r\n  zh: {\r\n    200: \"成功 - 请求成功。\",\r\n    201: \"已创建 - 成功创建了新资源。\",\r\n    400: \"错误请求 - 服务器无法理解该请求。\",\r\n    401: \"未授权 - 需要身份验证。\",\r\n    403: \"禁止 - 服务器理解请求，但拒绝授权。\",\r\n    404: \"未找到 - 请求的资源不存在。\",\r\n    500: \"服务器内部错误 - 服务器问题的通用错误消息。\",\r\n    503: \"服务不可用 - 服务器暂时不可用。\",\r\n  },\r\n  ja: {\r\n    200: \"OK - リクエストは成功しました。\",\r\n    201: \"作成済み - 新しいリソースが正常に作成されました。\",\r\n    400: \"不正なリクエスト - サーバーはリクエストを理解できませんでした。\",\r\n    401: \"未認証 - 認証が必要です。\",\r\n    403: \"禁止 - サーバーはリクエストを理解しましたが、承認を拒否しています。\",\r\n    404: \"見つかりません - 要求されたリソースは存在しません。\",\r\n    500: \"サーバー内部エラー - サーバーの問題に関する一般的なエラーメッセージ。\",\r\n    503: \"サービス利用不可 - サーバーは一時的に利用できません。\",\r\n  },\r\n  ar: {\r\n    200: \"موافق - نجح الطلب.\",\r\n    201: \"تم الإنشاء - تم إنشاء مورد جديد بنجاح.\",\r\n    400: \"طلب خاطئ - لم يستطع الخادم فهم الطلب.\",\r\n    401: \"غير مصرح - المصادقة مطلوبة.\",\r\n    403: \"محظور - فهم الخادم الطلب ولكنه يرفض تفويضه.\",\r\n    404: \"غير موجود - المورد المطلوب غير موجود.\",\r\n    500: \"خطأ داخلي في الخادم - رسالة خطأ عامة لمشاكل الخادم.\",\r\n    503: \"الخدمة غير متوفرة - الخادم غير متاح مؤقتًا.\",\r\n  },\r\n};\r\n\r\nexport default {\r\n  availableLanguages,\r\n  categoryTranslations,\r\n  statusCodeTranslations,\r\n};\r\n","const statusCodeUseCases = {\r\n  // 1xx Informational\r\n  100: [\r\n    \"When uploading large files in chunks to indicate the server is ready for the next chunk\",\r\n    \"In WebSockets to confirm a handshake is in progress\",\r\n  ],\r\n  101: [\r\n    \"During WebSocket connection establishment\",\r\n    \"When switching from HTTP to WebSockets protocol\",\r\n  ],\r\n\r\n  // 2xx Success\r\n  200: [\r\n    \"Standard response for successful HTTP requests\",\r\n    \"Response to successful GET requests\",\r\n    \"When an API request completes successfully\",\r\n  ],\r\n  201: [\r\n    \"After a POST request that creates a new resource\",\r\n    \"When an item is successfully added to a database\",\r\n    \"After user registration is complete\",\r\n  ],\r\n  204: [\r\n    \"After a successful DELETE operation\",\r\n    \"When submitting a form that should not navigate away\",\r\n    \"When an update operation succeeds but no content needs to be returned\",\r\n  ],\r\n\r\n  // 3xx Redirection\r\n  301: [\r\n    \"When a website has moved permanently to a new domain\",\r\n    \"Redirecting from old URLs to new URLs for SEO purposes\",\r\n    \"When consolidating multiple URLs to a canonical URL\",\r\n  ],\r\n  302: [\r\n    \"Temporary redirects during maintenance\",\r\n    \"After a successful form submission to redirect to a confirmation page\",\r\n    \"For A/B testing to temporarily direct users to different versions\",\r\n  ],\r\n  304: [\r\n    \"When browser cache is still valid\",\r\n    \"When a resource hasn't changed since the last request\",\r\n    \"To reduce bandwidth by not resending unchanged files\",\r\n  ],\r\n\r\n  // 4xx Client Errors\r\n  400: [\r\n    \"When form validation fails\",\r\n    \"When request parameters are missing or invalid\",\r\n    \"When the JSON payload is malformed\",\r\n  ],\r\n  401: [\r\n    \"When a user tries to access a resource without logging in\",\r\n    \"When an API key is missing or invalid\",\r\n    \"When session tokens have expired\",\r\n  ],\r\n  403: [\r\n    \"When a user is logged in but lacks permission for a resource\",\r\n    \"When IP-based restrictions prevent access\",\r\n    \"When trying to modify read-only resources\",\r\n  ],\r\n  404: [\r\n    \"When a URL doesn't exist\",\r\n    \"When a resource has been deleted\",\r\n    \"To mask the existence of sensitive resources for security\",\r\n  ],\r\n  429: [\r\n    \"When rate limits have been exceeded\",\r\n    \"To prevent brute force attacks\",\r\n    \"When a client is making too many requests in a short time period\",\r\n  ],\r\n\r\n  // 5xx Server Errors\r\n  500: [\r\n    \"When an unhandled exception occurs\",\r\n    \"During database connection failure\",\r\n    \"When the server encounters an unexpected condition\",\r\n  ],\r\n  502: [\r\n    \"When a proxy or load balancer can't reach the upstream server\",\r\n    \"During server deployment or restart\",\r\n    \"When the backend service is down\",\r\n  ],\r\n  503: [\r\n    \"During scheduled maintenance\",\r\n    \"When the server is overloaded\",\r\n    \"When a service is temporarily unavailable due to high traffic\",\r\n  ],\r\n  // Add more as needed\r\n};\r\n\r\nexport default statusCodeUseCases;\r\n","import statusCodes from \"./statusCodes.mjs\";\r\nimport {\r\n  availableLanguages,\r\n  categoryTranslations,\r\n  statusCodeTranslations,\r\n} from \"./i18n.mjs\";\r\nimport statusCodeUseCases from \"./useCases.mjs\";\r\n\r\n// Direct mappings for specific phrases to their status codes\r\n// These have the highest priority and override any other matching\r\nconst DIRECT_STATUS_MAPPINGS = {\r\n  \"not found\": 404,\r\n  \"bad request\": 400,\r\n  \"unauthorized\": 401,\r\n  \"forbidden\": 403,\r\n  \"internal server error\": 500,\r\n  \"service unavailable\": 503,\r\n  \"ok\": 200,\r\n  \"created\": 201,\r\n  \"continue\": 100,\r\n  \"moved permanently\": 301,\r\n  \"found\": 302,\r\n  \"resource not found\": 404,\r\n  \"server internal error\": 500,\r\n  \"not found - the requested resource does not exist.\": 404\r\n};\r\n\r\n// Special keywords to specific status codes mapping for direct matches\r\nconst KEYWORDS_TO_CODES = {\r\n  'continue': 100,\r\n  'switching': 101,\r\n  'processing': 102,\r\n  'early hints': 103,\r\n  'ok': 200,\r\n  'created': 201,\r\n  'accepted': 202,\r\n  'non-authoritative': 203,\r\n  'no content': 204,\r\n  'reset': 205,\r\n  'partial': 206,\r\n  'multi-status': 207,\r\n  'already reported': 208,\r\n  'im used': 226,\r\n  'multiple choices': 300,\r\n  'moved permanently': 301,\r\n  'found': 302,\r\n  'see other': 303,\r\n  'not modified': 304,\r\n  'use proxy': 305,\r\n  'temporary redirect': 307,\r\n  'permanent redirect': 308,\r\n  'bad request': 400,\r\n  'unauthorized': 401,\r\n  'payment required': 402,\r\n  'forbidden': 403,\r\n  'not found': 404,\r\n  'method not allowed': 405,\r\n  'not acceptable': 406,\r\n  'proxy authentication': 407,\r\n  'request timeout': 408,\r\n  'conflict': 409,\r\n  'gone': 410,\r\n  'length required': 411,\r\n  'precondition failed': 412,\r\n  'payload too large': 413,\r\n  'uri too long': 414,\r\n  'unsupported media': 415,\r\n  'range not satisfiable': 416,\r\n  'expectation failed': 417,\r\n  'teapot': 418,\r\n  'misdirected': 421,\r\n  'unprocessable': 422,\r\n  'locked': 423,\r\n  'failed dependency': 424,\r\n  'too early': 425,\r\n  'upgrade required': 426,\r\n  'precondition required': 428,\r\n  'too many requests': 429,\r\n  'fields too large': 431,\r\n  'legal reasons': 451,\r\n  'internal server error': 500,\r\n  'not implemented': 501,\r\n  'bad gateway': 502,\r\n  'service unavailable': 503,\r\n  'gateway timeout': 504,\r\n  'http version': 505,\r\n  'variant': 506,\r\n  'insufficient storage': 507,\r\n  'loop detected': 508,\r\n  'not extended': 510,\r\n  'network authentication': 511,\r\n  // Additional keywords for easier matching\r\n  'redirect': 302,\r\n  'moved': 301,\r\n  'resource': 404,\r\n  'server error': 500,\r\n  'internal error': 500,\r\n};\r\n\r\n// Special phrases that should be excluded from fuzzy matching\r\nconst NEGATIVE_PHRASES = [\r\n  'not a ', 'is not ', 'not an ', 'invalid ', 'no such ', 'unknown '\r\n];\r\n\r\n/**\r\n * Helper function to normalize and parse status codes\r\n * @param {number|string} code - The HTTP status code\r\n * @returns {number|null} - Parsed numeric code or null\r\n */\r\nfunction normalizeStatusCode(code) {\r\n  if (code === null || code === undefined) return null;\r\n  \r\n  // If it's already a number\r\n  if (typeof code === 'number') return isNaN(code) ? null : code;\r\n  \r\n  // If it's a string that contains only digits\r\n  if (typeof code === 'string' && /^\\d+$/.test(code)) {\r\n    return parseInt(code, 10);\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Check if a query is likely a status code description by looking for key markers\r\n * @param {string} query - The query to check\r\n * @returns {boolean} - True if the query is likely a status description\r\n */\r\nfunction isLikelyStatusDescription(query) {\r\n  if (!query || typeof query !== 'string') return false;\r\n  \r\n  const normalizedQuery = query.toLowerCase();\r\n  \r\n  // Check if it's in our direct mappings\r\n  if (DIRECT_STATUS_MAPPINGS[normalizedQuery]) {\r\n    return true;\r\n  }\r\n  \r\n  // Check for negative phrases first\r\n  for (const phrase of NEGATIVE_PHRASES) {\r\n    if (normalizedQuery.includes(phrase)) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  // Check for direct keyword matches\r\n  for (const keyword in KEYWORDS_TO_CODES) {\r\n    if (normalizedQuery === keyword || normalizedQuery.includes(keyword)) {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  // Common keywords in status code descriptions\r\n  const keywords = [\r\n    'ok', 'success', 'created', 'found', 'redirect', 'not found', 'error', \r\n    'unauthorized', 'bad', 'forbidden', 'server', 'client', 'unavailable', 'timeout'\r\n  ];\r\n  \r\n  // Check for exact matches of common status code names\r\n  const exactMatches = [\r\n    'not found', 'bad request', 'unauthorized', 'forbidden', 'ok', \r\n    'internal server error', 'service unavailable', 'created', 'continue'\r\n  ];\r\n  \r\n  if (exactMatches.includes(normalizedQuery)) {\r\n    return true;\r\n  }\r\n  \r\n  // Check if any of the keywords are in the query\r\n  return keywords.some(keyword => \r\n    normalizedQuery === keyword || \r\n    normalizedQuery.includes(` ${keyword} `) || \r\n    normalizedQuery.startsWith(`${keyword} `) || \r\n    normalizedQuery.endsWith(` ${keyword}`));\r\n}\r\n\r\n/**\r\n * Check if input contains negative phrases that would make it unlikely to be a valid status code\r\n * @param {string} query - The query string to check\r\n * @returns {boolean} - True if the query contains negative phrases\r\n */\r\nfunction containsNegativePhrases(query) {\r\n  if (!query || typeof query !== 'string') return false;\r\n  const normalizedQuery = query.toLowerCase();\r\n  \r\n  return NEGATIVE_PHRASES.some(phrase => normalizedQuery.includes(phrase));\r\n}\r\n\r\n/**\r\n * Find a status code by its description (fuzzy match)\r\n * @param {string} description - Description or part of it (e.g., \"Not Found\")\r\n * @returns {number|null} - The matching status code or null if not found\r\n */\r\nexport function findStatusCodeByDescription(description) {\r\n  if (!description || typeof description !== 'string') return null;\r\n  \r\n  const lowerDescription = description.toLowerCase();\r\n  \r\n  // If the description contains negative phrases, it's likely not a status code reference\r\n  if (containsNegativePhrases(lowerDescription)) {\r\n    return null;\r\n  }\r\n  \r\n  // Check direct mappings first (highest priority)\r\n  if (DIRECT_STATUS_MAPPINGS[lowerDescription]) {\r\n    return DIRECT_STATUS_MAPPINGS[lowerDescription];\r\n  }\r\n  \r\n  // Check for phrases that contain \"not found\" but aren't negative phrases\r\n  if (lowerDescription.includes(\"not found\")) {\r\n    return 404;\r\n  }\r\n  \r\n  // Check for direct keyword matches (second priority)\r\n  for (const keyword in KEYWORDS_TO_CODES) {\r\n    if (lowerDescription === keyword || \r\n        lowerDescription.includes(` ${keyword} `) || \r\n        lowerDescription.startsWith(`${keyword} `) || \r\n        lowerDescription.endsWith(` ${keyword}`)) {\r\n      return KEYWORDS_TO_CODES[keyword];\r\n    }\r\n  }\r\n  \r\n  // Reject input that doesn't look like a status description at all if not already matched\r\n  if (!isLikelyStatusDescription(lowerDescription)) {\r\n    return null;\r\n  }\r\n  \r\n  // Check exact matches with status code meanings\r\n  for (const [code, meaning] of Object.entries(statusCodes)) {\r\n    if (meaning.toLowerCase() === lowerDescription) {\r\n      return parseInt(code, 10);\r\n    }\r\n    \r\n    // Check for the first part before the hyphen (e.g., \"Not Found\" in \"Not Found - The...\")\r\n    const shortMeaning = meaning.split(' - ')[0].toLowerCase();\r\n    if (shortMeaning === lowerDescription) {\r\n      return parseInt(code, 10);\r\n    }\r\n  }\r\n  \r\n  // Check if description is contained in any status code meaning\r\n  // Very specific descriptions get priority\r\n  const exactMatches = [];\r\n  \r\n  for (const [code, meaning] of Object.entries(statusCodes)) {\r\n    const meaningLower = meaning.toLowerCase();\r\n    if (meaningLower.includes(lowerDescription)) {\r\n      exactMatches.push({ code: parseInt(code, 10), score: lowerDescription.length });\r\n    }\r\n  }\r\n  \r\n  if (exactMatches.length > 0) {\r\n    // Sort by score (higher is better - we want the most specific match)\r\n    exactMatches.sort((a, b) => b.score - a.score);\r\n    return exactMatches[0].code;\r\n  }\r\n  \r\n  // Check if any keywords match\r\n  const words = lowerDescription.split(/\\s+/).filter(word => word.length > 3);\r\n  if (words.length > 0) {\r\n    // Try to match based on significant words\r\n    const candidateMatches = [];\r\n    \r\n    for (const [code, meaning] of Object.entries(statusCodes)) {\r\n      const meaningLower = meaning.toLowerCase();\r\n      let matchScore = 0;\r\n      let exactWordMatches = 0;\r\n      \r\n      for (const word of words) {\r\n        // Ignore very common words that might cause false matches\r\n        if (['this', 'that', 'with', 'from', 'have', 'invalid'].includes(word)) {\r\n          continue;\r\n        }\r\n        \r\n        // Exact word match is weighted higher\r\n        const wordPattern = new RegExp(`\\\\b${word}\\\\b`, 'i');\r\n        if (wordPattern.test(meaningLower)) {\r\n          exactWordMatches++;\r\n          matchScore += 3;\r\n        } else if (meaningLower.includes(word)) {\r\n          matchScore += 1;\r\n        }\r\n      }\r\n      \r\n      // Boost score for multiple exact word matches (to avoid coincidental single-word matches)\r\n      if (exactWordMatches > 1) {\r\n        matchScore *= 2;\r\n      }\r\n      \r\n      if (matchScore > 0) {\r\n        candidateMatches.push({ code: parseInt(code, 10), score: matchScore });\r\n      }\r\n    }\r\n    \r\n    // Sort by match score (highest first)\r\n    candidateMatches.sort((a, b) => b.score - a.score);\r\n    \r\n    if (candidateMatches.length > 0 && candidateMatches[0].score > 2) {\r\n      return candidateMatches[0].code;\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Returns the human-readable meaning of an HTTP status code\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {string} The human-readable meaning of the status code\r\n */\r\nexport function getStatusMeaning(code, language = \"en\") {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return unknown\r\n  if (statusCode === null) {\r\n    return \"Unknown status code\";\r\n  }\r\n  \r\n  if (language === \"en\" || !availableLanguages.includes(language)) {\r\n    return statusCodes[statusCode] || \"Unknown status code\";\r\n  }\r\n\r\n  return (\r\n    statusCodeTranslations[language]?.[statusCode] ||\r\n    statusCodes[statusCode] ||\r\n    \"Unknown status code\"\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the category of an HTTP status code\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {string} The category of the status code\r\n */\r\nexport function getStatusCategory(code, language = \"en\") {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return unknown\r\n  if (statusCode === null) {\r\n    return language === \"en\" || !availableLanguages.includes(language) \r\n      ? \"Unknown\" \r\n      : categoryTranslations[language][\"Unknown\"] || \"Unknown\";\r\n  }\r\n  \r\n  let category;\r\n\r\n  if (statusCode >= 100 && statusCode < 200) category = \"Informational\";\r\n  else if (statusCode >= 200 && statusCode < 300) category = \"Success\";\r\n  else if (statusCode >= 300 && statusCode < 400) category = \"Redirection\";\r\n  else if (statusCode >= 400 && statusCode < 500) category = \"Client Error\";\r\n  else if (statusCode >= 500 && statusCode < 600) category = \"Server Error\";\r\n  else category = \"Unknown\";\r\n\r\n  if (language === \"en\" || !availableLanguages.includes(language)) {\r\n    return category;\r\n  }\r\n\r\n  return categoryTranslations[language][category] || category;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Informational category (1xx)\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {boolean} True if the code is in the Informational category\r\n */\r\nexport function isInformational(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return false\r\n  if (statusCode === null) {\r\n    return false;\r\n  }\r\n  \r\n  return statusCode >= 100 && statusCode < 200;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Success category (2xx)\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {boolean} True if the code is in the Success category\r\n */\r\nexport function isSuccess(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return false\r\n  if (statusCode === null) {\r\n    return false;\r\n  }\r\n  \r\n  return statusCode >= 200 && statusCode < 300;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Redirection category (3xx)\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {boolean} True if the code is in the Redirection category\r\n */\r\nexport function isRedirection(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return false\r\n  if (statusCode === null) {\r\n    return false;\r\n  }\r\n  \r\n  return statusCode >= 300 && statusCode < 400;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Client Error category (4xx)\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {boolean} True if the code is in the Client Error category\r\n */\r\nexport function isClientError(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return false\r\n  if (statusCode === null) {\r\n    return false;\r\n  }\r\n  \r\n  return statusCode >= 400 && statusCode < 500;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Server Error category (5xx)\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {boolean} True if the code is in the Server Error category\r\n */\r\nexport function isServerError(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return false\r\n  if (statusCode === null) {\r\n    return false;\r\n  }\r\n  \r\n  return statusCode >= 500 && statusCode < 600;\r\n}\r\n\r\n/**\r\n * Returns all status codes in a specific category\r\n * @param {string} category - The category to filter by ('informational', 'success', 'redirection', 'clientError', 'serverError')\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {Object} An object containing the filtered status codes and their meanings\r\n */\r\nexport function getStatusCodesByCategory(category, language = \"en\") {\r\n  const result = {};\r\n\r\n  for (const code in statusCodes) {\r\n    const numCode = parseInt(code);\r\n\r\n    if (\r\n      (category === \"informational\" && isInformational(numCode)) ||\r\n      (category === \"success\" && isSuccess(numCode)) ||\r\n      (category === \"redirection\" && isRedirection(numCode)) ||\r\n      (category === \"clientError\" && isClientError(numCode)) ||\r\n      (category === \"serverError\" && isServerError(numCode))\r\n    ) {\r\n      result[code] = getStatusMeaning(numCode, language);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns all status codes\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {Object} An object containing all status codes and their meanings\r\n */\r\nexport function getAllStatusCodes(language = \"en\") {\r\n  const result = {};\r\n\r\n  for (const code in statusCodes) {\r\n    result[code] = getStatusMeaning(parseInt(code), language);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns common use cases for a given status code\r\n * @param {number|string} code - The HTTP status code or its description\r\n * @returns {string[]} Array of common use cases or empty array if none defined\r\n */\r\nexport function getStatusCodeUseCases(code) {\r\n  // Try to parse as a status code first\r\n  let statusCode = normalizeStatusCode(code);\r\n  \r\n  // If not a valid number, try to find by description\r\n  if (statusCode === null && typeof code === 'string') {\r\n    statusCode = findStatusCodeByDescription(code);\r\n  }\r\n  \r\n  // If still not found, return empty array\r\n  if (statusCode === null) {\r\n    return [];\r\n  }\r\n  \r\n  return statusCodeUseCases[statusCode] || [];\r\n}\r\n\r\n/**\r\n * Returns all supported languages\r\n * @returns {string[]} Array of language codes\r\n */\r\nexport function getSupportedLanguages() {\r\n  return [...availableLanguages];\r\n}\r\n\r\n// Export everything for browser usage\r\nexport default {\r\n  getStatusMeaning,\r\n  getStatusCategory,\r\n  isInformational,\r\n  isSuccess,\r\n  isRedirection,\r\n  isClientError,\r\n  isServerError,\r\n  getStatusCodesByCategory,\r\n  getAllStatusCodes,\r\n  getStatusCodeUseCases,\r\n  getSupportedLanguages,\r\n  findStatusCodeByDescription,\r\n};\r\n","// This is a simple wrapper for browser compatibility\r\n// You'll need to use a bundler like webpack, rollup, or esbuild to build this\r\n\r\n// Import everything from the main module\r\nimport httpStatusMeaning from \"../src/index.mjs\";\r\n\r\n// Attach to window object for browser usage\r\nif (typeof window !== \"undefined\") {\r\n  window.httpStatusMeaning = httpStatusMeaning;\r\n}\r\n\r\nexport default httpStatusMeaning;\r\n"],"names":[],"mappings":"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"}