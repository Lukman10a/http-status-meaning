{"version":3,"file":"http-status-meaning.js","sources":["../src/statusCodes.mjs","../src/i18n.mjs","../src/useCases.mjs","../src/index.mjs","../browser/index.js"],"sourcesContent":["const statusCodes = {\r\n  // 1xx Informational\r\n  100: \"Continue - The server has received the request headers and the client should proceed to send the request body.\",\r\n  101: \"Switching Protocols - The requester has asked the server to switch protocols and the server has agreed to do so.\",\r\n  102: \"Processing - The server has received and is processing the request, but no response is available yet.\",\r\n  103: \"Early Hints - Used to return some response headers before final HTTP message.\",\r\n\r\n  // 2xx Success\r\n  200: \"OK - The request was successful.\",\r\n  201: \"Created - A new resource was successfully created.\",\r\n  202: \"Accepted - The request has been accepted for processing, but the processing has not been completed.\",\r\n  203: \"Non-Authoritative Information - The returned information is from a cached copy instead of the origin server.\",\r\n  204: \"No Content - The request was successful, but there's no content to return.\",\r\n  205: \"Reset Content - The server has fulfilled the request and desires that the user agent reset the document view.\",\r\n  206: \"Partial Content - The server is delivering only part of the resource due to a range header sent by the client.\",\r\n  207: \"Multi-Status - The message body that follows is an XML message and can contain multiple separate response codes.\",\r\n  208: \"Already Reported - The members of a DAV binding have already been enumerated in a previous reply.\",\r\n  226: \"IM Used - The server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\",\r\n\r\n  // 3xx Redirection\r\n  300: \"Multiple Choices - The request has more than one possible response.\",\r\n  301: \"Moved Permanently - The URL of the requested resource has been changed permanently.\",\r\n  302: \"Found - The URI of requested resource has been changed temporarily.\",\r\n  303: \"See Other - The response to the request can be found under another URI using a GET method.\",\r\n  304: \"Not Modified - The resource has not been modified since the last request.\",\r\n  305: \"Use Proxy - The requested resource is available only through a proxy.\",\r\n  307: \"Temporary Redirect - The request should be repeated with another URI, but future requests should still use the original URI.\",\r\n  308: \"Permanent Redirect - The request and all future requests should be repeated using another URI.\",\r\n\r\n  // 4xx Client Errors\r\n  400: \"Bad Request - The request could not be understood.\",\r\n  401: \"Unauthorized - Authentication is required.\",\r\n  402: \"Payment Required - Payment is required for the requested resource.\",\r\n  403: \"Forbidden - The server understood the request but refuses to authorize it.\",\r\n  404: \"Not Found - The requested resource does not exist.\",\r\n  405: \"Method Not Allowed - The request method is not supported for the requested resource.\",\r\n  406: \"Not Acceptable - The requested resource cannot generate content according to the Accept headers sent.\",\r\n  407: \"Proxy Authentication Required - The client must first authenticate itself with the proxy.\",\r\n  408: \"Request Timeout - The server timed out waiting for the request.\",\r\n  409: \"Conflict - The request could not be completed due to a conflict with the current state of the resource.\",\r\n  410: \"Gone - The requested resource is no longer available and will not be available again.\",\r\n  411: \"Length Required - The request did not specify the length of its content.\",\r\n  412: \"Precondition Failed - The server does not meet one of the preconditions specified in the request.\",\r\n  413: \"Payload Too Large - The request entity is larger than limits defined by server.\",\r\n  414: \"URI Too Long - The URI provided was too long for the server to process.\",\r\n  415: \"Unsupported Media Type - The request entity has a media type which the server or resource does not support.\",\r\n  416: \"Range Not Satisfiable - The client has asked for a portion of the file, but the server cannot supply that portion.\",\r\n  417: \"Expectation Failed - The server cannot meet the requirements of the Expect request-header field.\",\r\n  418: \"I'm a teapot - The server refuses the attempt to brew coffee with a teapot.\",\r\n  421: \"Misdirected Request - The request was directed at a server that is not able to produce a response.\",\r\n  422: \"Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.\",\r\n  423: \"Locked - The resource that is being accessed is locked.\",\r\n  424: \"Failed Dependency - The request failed due to failure of a previous request.\",\r\n  425: \"Too Early - The server is unwilling to risk processing a request that might be replayed.\",\r\n  426: \"Upgrade Required - The client should switch to a different protocol.\",\r\n  428: \"Precondition Required - The origin server requires the request to be conditional.\",\r\n  429: \"Too Many Requests - The user has sent too many requests in a given amount of time.\",\r\n  431: \"Request Header Fields Too Large - The server is unwilling to process the request because its header fields are too large.\",\r\n  451: \"Unavailable For Legal Reasons - The resource is unavailable due to legal reasons.\",\r\n\r\n  // 5xx Server Errors\r\n  500: \"Internal Server Error - A generic error message for server issues.\",\r\n  501: \"Not Implemented - The server does not support the functionality required to fulfill the request.\",\r\n  502: \"Bad Gateway - The server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\r\n  503: \"Service Unavailable - The server is temporarily unavailable.\",\r\n  504: \"Gateway Timeout - The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\",\r\n  505: \"HTTP Version Not Supported - The server does not support the HTTP protocol version used in the request.\",\r\n  506: \"Variant Also Negotiates - The server has an internal configuration error.\",\r\n  507: \"Insufficient Storage - The server is unable to store the representation needed to complete the request.\",\r\n  508: \"Loop Detected - The server detected an infinite loop while processing the request.\",\r\n  510: \"Not Extended - Further extensions to the request are required for the server to fulfill it.\",\r\n  511: \"Network Authentication Required - The client needs to authenticate to gain network access.\",\r\n};\r\n\r\nexport default statusCodes;\r\n","// Available languages\r\nexport const availableLanguages = [\"en\", \"es\", \"fr\", \"de\", \"zh\"];\r\n\r\n// Translations for status code categories\r\nexport const categoryTranslations = {\r\n  en: {\r\n    Informational: \"Informational\",\r\n    Success: \"Success\",\r\n    Redirection: \"Redirection\",\r\n    \"Client Error\": \"Client Error\",\r\n    \"Server Error\": \"Server Error\",\r\n    Unknown: \"Unknown\",\r\n  },\r\n  es: {\r\n    Informational: \"Informativo\",\r\n    Success: \"Éxito\",\r\n    Redirection: \"Redirección\",\r\n    \"Client Error\": \"Error del Cliente\",\r\n    \"Server Error\": \"Error del Servidor\",\r\n    Unknown: \"Desconocido\",\r\n  },\r\n  fr: {\r\n    Informational: \"Information\",\r\n    Success: \"Succès\",\r\n    Redirection: \"Redirection\",\r\n    \"Client Error\": \"Erreur Client\",\r\n    \"Server Error\": \"Erreur Serveur\",\r\n    Unknown: \"Inconnu\",\r\n  },\r\n  de: {\r\n    Informational: \"Information\",\r\n    Success: \"Erfolg\",\r\n    Redirection: \"Umleitung\",\r\n    \"Client Error\": \"Client-Fehler\",\r\n    \"Server Error\": \"Server-Fehler\",\r\n    Unknown: \"Unbekannt\",\r\n  },\r\n  zh: {\r\n    Informational: \"信息性\",\r\n    Success: \"成功\",\r\n    Redirection: \"重定向\",\r\n    \"Client Error\": \"客户端错误\",\r\n    \"Server Error\": \"服务器错误\",\r\n    Unknown: \"未知\",\r\n  },\r\n};\r\n\r\n// Translations for status codes\r\nexport const statusCodeTranslations = {\r\n  // English is the default in statusCodes.mjs\r\n  es: {\r\n    200: \"OK - La solicitud ha tenido éxito.\",\r\n    201: \"Creado - Se ha creado un nuevo recurso con éxito.\",\r\n    400: \"Solicitud incorrecta - El servidor no pudo entender la solicitud.\",\r\n    404: \"No encontrado - El recurso solicitado no existe.\",\r\n    500: \"Error interno del servidor - Un mensaje de error genérico para problemas del servidor.\",\r\n    // Add other translations as needed\r\n  },\r\n  fr: {\r\n    200: \"OK - La requête a réussi.\",\r\n    201: \"Créé - Une nouvelle ressource a été créée avec succès.\",\r\n    400: \"Mauvaise demande - Le serveur n'a pas pu comprendre la requête.\",\r\n    404: \"Non trouvé - La ressource demandée n'existe pas.\",\r\n    500: \"Erreur interne du serveur - Un message d'erreur générique pour les problèmes de serveur.\",\r\n    // Add other translations as needed\r\n  },\r\n  de: {\r\n    200: \"OK - Die Anfrage war erfolgreich.\",\r\n    201: \"Erstellt - Eine neue Ressource wurde erfolgreich erstellt.\",\r\n    400: \"Fehlerhafte Anfrage - Die Anfrage konnte nicht verstanden werden.\",\r\n    404: \"Nicht gefunden - Die angeforderte Ressource existiert nicht.\",\r\n    500: \"Interner Serverfehler - Eine generische Fehlermeldung für Serverprobleme.\",\r\n    // Add other translations as needed\r\n  },\r\n  zh: {\r\n    200: \"成功 - 请求成功。\",\r\n    201: \"已创建 - 成功创建了新资源。\",\r\n    400: \"错误请求 - 服务器无法理解该请求。\",\r\n    404: \"未找到 - 请求的资源不存在。\",\r\n    500: \"服务器内部错误 - 服务器问题的通用错误消息。\",\r\n    // Add other translations as needed\r\n  },\r\n};\r\n\r\nexport default {\r\n  availableLanguages,\r\n  categoryTranslations,\r\n  statusCodeTranslations,\r\n};\r\n","const statusCodeUseCases = {\r\n  // 1xx Informational\r\n  100: [\r\n    \"When uploading large files in chunks to indicate the server is ready for the next chunk\",\r\n    \"In WebSockets to confirm a handshake is in progress\",\r\n  ],\r\n  101: [\r\n    \"During WebSocket connection establishment\",\r\n    \"When switching from HTTP to WebSockets protocol\",\r\n  ],\r\n\r\n  // 2xx Success\r\n  200: [\r\n    \"Standard response for successful HTTP requests\",\r\n    \"Response to successful GET requests\",\r\n    \"When an API request completes successfully\",\r\n  ],\r\n  201: [\r\n    \"After a POST request that creates a new resource\",\r\n    \"When an item is successfully added to a database\",\r\n    \"After user registration is complete\",\r\n  ],\r\n  204: [\r\n    \"After a successful DELETE operation\",\r\n    \"When submitting a form that should not navigate away\",\r\n    \"When an update operation succeeds but no content needs to be returned\",\r\n  ],\r\n\r\n  // 3xx Redirection\r\n  301: [\r\n    \"When a website has moved permanently to a new domain\",\r\n    \"Redirecting from old URLs to new URLs for SEO purposes\",\r\n    \"When consolidating multiple URLs to a canonical URL\",\r\n  ],\r\n  302: [\r\n    \"Temporary redirects during maintenance\",\r\n    \"After a successful form submission to redirect to a confirmation page\",\r\n    \"For A/B testing to temporarily direct users to different versions\",\r\n  ],\r\n  304: [\r\n    \"When browser cache is still valid\",\r\n    \"When a resource hasn't changed since the last request\",\r\n    \"To reduce bandwidth by not resending unchanged files\",\r\n  ],\r\n\r\n  // 4xx Client Errors\r\n  400: [\r\n    \"When form validation fails\",\r\n    \"When request parameters are missing or invalid\",\r\n    \"When the JSON payload is malformed\",\r\n  ],\r\n  401: [\r\n    \"When a user tries to access a resource without logging in\",\r\n    \"When an API key is missing or invalid\",\r\n    \"When session tokens have expired\",\r\n  ],\r\n  403: [\r\n    \"When a user is logged in but lacks permission for a resource\",\r\n    \"When IP-based restrictions prevent access\",\r\n    \"When trying to modify read-only resources\",\r\n  ],\r\n  404: [\r\n    \"When a URL doesn't exist\",\r\n    \"When a resource has been deleted\",\r\n    \"To mask the existence of sensitive resources for security\",\r\n  ],\r\n  429: [\r\n    \"When rate limits have been exceeded\",\r\n    \"To prevent brute force attacks\",\r\n    \"When a client is making too many requests in a short time period\",\r\n  ],\r\n\r\n  // 5xx Server Errors\r\n  500: [\r\n    \"When an unhandled exception occurs\",\r\n    \"During database connection failure\",\r\n    \"When the server encounters an unexpected condition\",\r\n  ],\r\n  502: [\r\n    \"When a proxy or load balancer can't reach the upstream server\",\r\n    \"During server deployment or restart\",\r\n    \"When the backend service is down\",\r\n  ],\r\n  503: [\r\n    \"During scheduled maintenance\",\r\n    \"When the server is overloaded\",\r\n    \"When a service is temporarily unavailable due to high traffic\",\r\n  ],\r\n  // Add more as needed\r\n};\r\n\r\nexport default statusCodeUseCases;\r\n","import statusCodes from \"./statusCodes.mjs\";\r\nimport {\r\n  availableLanguages,\r\n  categoryTranslations,\r\n  statusCodeTranslations,\r\n} from \"./i18n.mjs\";\r\nimport statusCodeUseCases from \"./useCases.mjs\";\r\n\r\n/**\r\n * Returns the human-readable meaning of an HTTP status code\r\n * @param {number} code - The HTTP status code\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {string} The human-readable meaning of the status code\r\n */\r\nexport function getStatusMeaning(code, language = \"en\") {\r\n  if (language === \"en\" || !availableLanguages.includes(language)) {\r\n    return statusCodes[code] || \"Unknown status code\";\r\n  }\r\n\r\n  return (\r\n    statusCodeTranslations[language]?.[code] ||\r\n    statusCodes[code] ||\r\n    \"Unknown status code\"\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the category of an HTTP status code\r\n * @param {number} code - The HTTP status code\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {string} The category of the status code\r\n */\r\nexport function getStatusCategory(code, language = \"en\") {\r\n  let category;\r\n\r\n  if (code >= 100 && code < 200) category = \"Informational\";\r\n  else if (code >= 200 && code < 300) category = \"Success\";\r\n  else if (code >= 300 && code < 400) category = \"Redirection\";\r\n  else if (code >= 400 && code < 500) category = \"Client Error\";\r\n  else if (code >= 500 && code < 600) category = \"Server Error\";\r\n  else category = \"Unknown\";\r\n\r\n  if (language === \"en\" || !availableLanguages.includes(language)) {\r\n    return category;\r\n  }\r\n\r\n  return categoryTranslations[language][category] || category;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Informational category (1xx)\r\n * @param {number} code - The HTTP status code\r\n * @returns {boolean} True if the code is in the Informational category\r\n */\r\nexport function isInformational(code) {\r\n  return code >= 100 && code < 200;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Success category (2xx)\r\n * @param {number} code - The HTTP status code\r\n * @returns {boolean} True if the code is in the Success category\r\n */\r\nexport function isSuccess(code) {\r\n  return code >= 200 && code < 300;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Redirection category (3xx)\r\n * @param {number} code - The HTTP status code\r\n * @returns {boolean} True if the code is in the Redirection category\r\n */\r\nexport function isRedirection(code) {\r\n  return code >= 300 && code < 400;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Client Error category (4xx)\r\n * @param {number} code - The HTTP status code\r\n * @returns {boolean} True if the code is in the Client Error category\r\n */\r\nexport function isClientError(code) {\r\n  return code >= 400 && code < 500;\r\n}\r\n\r\n/**\r\n * Checks if a status code is in the Server Error category (5xx)\r\n * @param {number} code - The HTTP status code\r\n * @returns {boolean} True if the code is in the Server Error category\r\n */\r\nexport function isServerError(code) {\r\n  return code >= 500 && code < 600;\r\n}\r\n\r\n/**\r\n * Returns all status codes in a specific category\r\n * @param {string} category - The category to filter by ('informational', 'success', 'redirection', 'clientError', 'serverError')\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {Object} An object containing the filtered status codes and their meanings\r\n */\r\nexport function getStatusCodesByCategory(category, language = \"en\") {\r\n  const result = {};\r\n\r\n  for (const code in statusCodes) {\r\n    const numCode = parseInt(code);\r\n\r\n    if (\r\n      (category === \"informational\" && isInformational(numCode)) ||\r\n      (category === \"success\" && isSuccess(numCode)) ||\r\n      (category === \"redirection\" && isRedirection(numCode)) ||\r\n      (category === \"clientError\" && isClientError(numCode)) ||\r\n      (category === \"serverError\" && isServerError(numCode))\r\n    ) {\r\n      result[code] = getStatusMeaning(numCode, language);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns all status codes\r\n * @param {string} [language='en'] - The language for the response\r\n * @returns {Object} An object containing all status codes and their meanings\r\n */\r\nexport function getAllStatusCodes(language = \"en\") {\r\n  const result = {};\r\n\r\n  for (const code in statusCodes) {\r\n    result[code] = getStatusMeaning(parseInt(code), language);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns common use cases for a given status code\r\n * @param {number} code - The HTTP status code\r\n * @returns {string[]} Array of common use cases or empty array if none defined\r\n */\r\nexport function getStatusCodeUseCases(code) {\r\n  return statusCodeUseCases[code] || [];\r\n}\r\n\r\n/**\r\n * Returns all supported languages\r\n * @returns {string[]} Array of language codes\r\n */\r\nexport function getSupportedLanguages() {\r\n  return [...availableLanguages];\r\n}\r\n\r\n// Export everything for browser usage\r\nexport default {\r\n  getStatusMeaning,\r\n  getStatusCategory,\r\n  isInformational,\r\n  isSuccess,\r\n  isRedirection,\r\n  isClientError,\r\n  isServerError,\r\n  getStatusCodesByCategory,\r\n  getAllStatusCodes,\r\n  getStatusCodeUseCases,\r\n  getSupportedLanguages,\r\n};\r\n","// This is a simple wrapper for browser compatibility\r\n// You'll need to use a bundler like webpack, rollup, or esbuild to build this\r\n\r\n// Import everything from the main module\r\nimport httpStatusMeaning from \"../src/index.mjs\";\r\n\r\n// Attach to window object for browser usage\r\nif (typeof window !== \"undefined\") {\r\n  window.httpStatusMeaning = httpStatusMeaning;\r\n}\r\n\r\nexport default httpStatusMeaning;\r\n"],"names":[],"mappings":"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"}